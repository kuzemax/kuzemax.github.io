[{"path":"/2024/11/13/算法归并排序/","content":"title: 归并排序 归并排序算法模板 —— 模板题 AcWing 787. 归并排序 123456789101112131415161718192021void merge_sort(int q[], int l, int r)&#123; if (l &gt;= r) return; int mid = l + r &gt;&gt; 1; merge_sort(q, l, mid); merge_sort(q, mid + 1, r); int k = 0, i = l, j = mid + 1; while (i &lt;= mid &amp;&amp; j &lt;= r) if (q[i] &lt;= q[j]) tmp[k ++ ] = q[i ++ ]; else tmp[k ++ ] = q[j ++ ]; while (i &lt;= mid) tmp[k ++ ] = q[i ++ ]; while (j &lt;= r) tmp[k ++ ] = q[j ++ ]; for (i = l, j = 0; i &lt;= r; i ++, j ++ ) q[i] = tmp[j];&#125; 上一个我感觉讲的太啰嗦了，这次讲的简单点 开头依旧是老朋友，定义一个函数 int mid &#x3D; l + r &gt;&gt; 1; merge_sort(q, l, mid); merge_sort(q, mid + 1, r); 递归老朋友了，还是分成两个区间左边到中间，中间到右边 int k &#x3D; 0, i &#x3D; l, j &#x3D; mid + 1; while (i &lt;&#x3D; mid &amp;&amp; j &lt;&#x3D; r) if (q[i] &lt;&#x3D; q[j]) tmp[k ++ ] &#x3D; q[i ++ ]; else tmp[k ++ ] &#x3D; q[j ++ ]; 从这里开始有点不同了；i&#x3D;l,j&#x3D;mid+1;j是中间值+1 然后是一个while循环，整个函数i和j相当于指针，用指针是为了不改变原来传入的参数的值，然后i和j的移动方向都是从左向右， i &lt;&#x3D; mid &amp;&amp; j &lt;&#x3D; r 循环的条件，最左边的指针向右移动的过程不超过中间值，中间的指针向右移动的过程不超过最右值； if (q[i] &lt;&#x3D; q[j]) tmp[k ++ ] &#x3D; q[i ++ ]; else tmp[k ++ ] &#x3D; q[j ++ ]; 左边的指针指向的值小于右边指针指向的值，将左边指针指向的值传入数组tmp[k]，不然就是将右边指针指向的数传入 即用定义的另外一个空数组将较小的那个值即q[i ++ ]装入。这样就能将部分数据从小到大排一遍。 while (i &lt;&#x3D; mid) tmp[k ++ ] &#x3D; q[i ++ ]; while (j &lt;&#x3D; r) tmp[k ++ ] &#x3D; q[j ++ ]; 这里检测一边的指针走到尽头后，如果另一边还有剩余就将剩余全部放入新建的tmp[k]数组中。这样所有数据就排序完成 for (i &#x3D; l, j &#x3D; 0; i &lt;&#x3D; r; i ++, j ++ ) q[i] &#x3D; tmp[j]; 最后将tmp[]数组中的数据再重新放回q[]这样就排序完成输出q[]"},{"title":"快速排序","path":"/2024/11/13/算法/","content":"学校要求参加一个算法比赛特地来复习一下算法重新分析一下acwing的模板复习自用 1.快速排序算法模板 —— 模板题 AcWing 785. 快速排序 1234567891011121314void quick_sort(int q[], int l, int r)&#123; if (l &gt;= r) return; int i = l - 1, j = r + 1, x = q[l + r &gt;&gt; 1]; while (i &lt; j) &#123; do i ++ ; while (q[i] &lt; x); do j -- ; while (q[j] &gt; x); if (i &lt; j) swap(q[i], q[j]); &#125; quick_sort(q, l, j), quick_sort(q, j + 1, r);&#125; 这是个递归函数 void quick_sort(int q[], int l, int r) 意思是创建一个函数，函数里定义一个整数型数组q[],和整数l,r 这里数据全部放在数组里，其中l,r相当于数组左右两端的指针 我们先看后面的代码再看 if (l &gt;&#x3D; r) return; int i &#x3D; l - 1, j &#x3D; r + 1, x &#x3D; q[l + r &gt;&gt; 1]; 该段代码意思是，定义一个变量i&#x3D;l-1;定义一个变量j&#x3D;r+1。x&#x3D;q[l+r&gt;&gt;1];这里的意思是x取数组中间位置的值 l+r&gt;&gt;1二进制位移了一位相当于除以2. 这是比特操作,可以看做是除2，如12的二进制表示是00001100,12&gt;&gt;1将00001100右移一位，变为00000110，即6.又如15的二进制表示是00001111,15&gt;&gt;1将00001111右移一位，变为00000111，即7.另外&lt;&lt;就是左移，相当于乘以2. 补充一下：如果是12 &gt;&gt; 2，就是将00001100右移两位，变为00000011，即3。相当于12&#x2F;2^2 这里为什么要重新设置两端，将两端都移了一位，用l-1和r+1呢？因为这里我用的是do-while循环，先执行的i++，在执行的判断条件，大家也可以改成while循环。 有人说为什么不一开始就把l和r设置好呢，因为函数是被调用的，你输入的数是两端的，要考虑到用户。 首先我们要了解到我们排完序是左边小于右边 while (i &lt; j) { do i ++ ; while (q[i] &lt; x); do j – ; while (q[j] &gt; x); if (i &lt; j) swap(q[i], q[j]); } 然后是一个while循环,当左边指针在右边指针的左边就循环，相当于左右两边的指针不停的往对方的两边移动，在移动的过程中会有交换数据的情况，然后一旦左右指针相遇然后错过，该循环就应该结束 然后while循环里就是do-while循环先将i+1，然后看i指针指向的值是不是小于x即数组中间指针指向的值，然后如果i小于，指针就往下移一位即从左往右，一旦i&gt;&#x3D;x,到下一步do j – ; while (q[j] &gt; x);就将左边即i放在一边不管，先看右边即j，将j-1,然后然后看j指针指向的值是不是大于x即数组中间指针指向的值，然后如果j大于，指针就往下移一位即从右往左。同理如果不满足条件跳出循环，然后判断指针i是不是在指针j的左边，如果是，将左右指针的值交换，（这样部分值就被排序了）一旦i和j相遇然后他们互相越过就跳出循环 quick_sort(q, l, j), quick_sort(q, j + 1, r); 这里就是递归的关键了将左边和右边再分别放入函数，然后左边不停的左右分，右边也不停的左右分，最后变成只有2个数排序 然后让我们来看一开始的代码 if (l &gt;&#x3D; r) return; return是函数直接返回, 也就是结束该函数,要跳出循环用break, if代码段是不能用break跳出的, 在一个函数内任意位置调用return, 直接退出函数 一般来说一开始输入的数据不可能l&gt;&#x3D;r，这里可以当作一开始的过滤错误输入； 这段代码是用于二分到尽头后开始返回，当每个函数里只有两个数，再分就分不下去了，l&gt;&#x3D;r。然后return,返回上一个函数，上一个函数进行到末尾了然后也要继续返回，一直返回到最初，这个时候数组已经排序完了。 大家可以用小一点的数字自己走一遍。 下面是实例： 快速排序 给定你一个长度为 nn 的整数数列。 请你使用快速排序对这个数列按照从小到大进行排序。 并将排好序的数列按顺序输出。 输入格式输入共两行，第一行包含整数 nn。 第二行包含 nn 个整数（所有整数均在 1∼1091∼109 范围内），表示整个数列。 输出格式输出共一行，包含 nn 个整数，表示排好序的数列。 数据范围1≤n≤1000001≤n≤100000 输入样例：1253 1 2 4 5 输出样例：11 2 3 4 5 12345678910111213141516171819202122232425262728293031323334353637383940414243444546#include&lt;iostream&gt;using namespace std;const int N =1e6+10;int a[N];int n;void quick_sort(int l, int r,int a[])&#123; int t =1; if (l&gt;=r) return; int x= a[(r+l)&gt;&gt;1]; int i=l-1; int j=r+1; while(i&lt;j)&#123; do i++;while (a[i]&lt;x); do j--;while (a[j]&gt;x); if(i&lt;j)&#123; t=a[i]; a[i]=a[j]; a[j]=t; &#125;; &#125; quick_sort(l,j,a),quick_sort(j+1,r,a); &#125;int main()&#123; scanf(&quot;%d&quot;,&amp;n); for(int i=0 ; i&lt;n;i++) &#123; scanf (&quot;%d&quot;,&amp;a[i]); &#125; quick_sort(0,n-1,a); for(int i=0;i&lt;n;i++) printf(&quot;%d &quot;,a[i]); return 0;&#125;"},{"title":"测试一下Typora","path":"/2024/11/11/测试一下Typora/","content":"测试一下Typora毕竟花了80大洋 然后试试玩玩 斜体 加粗 加粗和斜体 下划线 $$公式块$$ 1代码块 print（&#x27;hello world&#x27;） [!NOTE] 警告框 引用 任务序列"},{"title":"数据作业Chatgpt建表","path":"/2024/11/11/数据作业Chatgpt建表/","content":"建立teaching库 我现在使用SQL Server Management Studio 20进行数据库管理操作。现在我将给你一个数据库的脚本，然后提出一些数据库管理任务，你需要给出对应在这个数据库中的命令。要求：遵循SQL Server Management Studio 20的语法，尽量使用基础命令实现功能，直接了当给出结果，少说没必要的拓展。这是数据库的脚本CREATE DATABASE teaching ON( NAME &#x3D; ‘teaching’,FILENAME &#x3D; ‘E:\\DATA\\teaching.mdf’ ,SIZE &#x3D; 5MB ,MAXSIZE &#x3D; UNLIMITED,FILEGROWTH &#x3D; 10%) LOG ON( NAME &#x3D; ‘teaching_log’,FILENAME &#x3D; ‘E:\\DATA\\teaching_log.ldf’ , SIZE &#x3D; 8MB , MAXSIZE &#x3D; UNLIMITED , FILEGROWTH &#x3D; 1MB )CREATE TABLE student (sno char(9) PRIMARY KEY, sname nvarchar(8) NOT NULL , ssex nchar(1) NOT NULL CHECK (ssexr&#x3D;’男’ or ssex&#x3D;’女’), sbirthday date, en_time date, major nvarchar(10), grade nchar(5) NOT NULL )CREATE TABLE course (cno char(4) PRIMARY KEY, cname nvarchar(20) NOT NULL, classhour tinyint CHECK (classhour&gt;&#x3D;2 and classhour&lt;&#x3D;6), credit tinyint CHECK (credit&gt;&#x3D;1 and credit&lt;&#x3D;5) )CREATE TABLE sc( sno char(10) FOREIGN KEY REFERENCES student(sno), cno char(4) FOREIGN KEY REFERENCES course(cno), score int CHECK (score&gt;&#x3D;0 and score&lt;&#x3D;100), PRIMARY KEY(sno,cno)) 建立bankcard库 1．使用SSMS创建名为“bankcard（银行卡管理）”的数据库，并设置数据库主文件名为bankcard _data，初始大小为10MB，日志文件名为bankcard _log，初始大小为10MB，其它默认。所有的文件都放在目录“F:\\DATA”中。 存放位置也可自行决定。2．在 “bankcard”数据库中完成下列操作。(1)创建“depositor”储户表，表结构如表1：表1 储户表的表结构属性名\t类型\t宽度\t键值\t允许空否\t取值范围\t属性的含义IDNO\tchar\t18\t主键\t否 身份证号Dname\tnvarchar\t10 否 姓名Telephone\tchar\t11 否\t数字字符\t手机号VIP\tnchar\t1 否\t是或否\t贵宾储户 (2)创建“account” 账户表，表结构如表2：表2 账户表的表结构属性名\t类型\t宽度\t键值\t允许空否\t取值范围\t属性的含义AccNO\tchar\t20\t主键\t否\t数字字符\t账号IDNO\tchar\t18\t外键\t否\t参考储户表主键\t身份证号Password\tchar\t6 否\t数字字符\t密码OpenDate\tdate 否\t默认值：当前日期\t开户日期CardType\tnchar\t3 否\t信用卡、借记卡等\t卡类型MoneyType\tnvarchar\t10 否\t人民币、美元等\t币种Balance\tmoney 否 余额ExpiryDate\tdate 否\t〉OpenDate\t有效期(3)创建“Trecord”交易记录表，表结构如表3：表3 交易记录表的表结构属性名\t类型\t宽度\t键值\t允许空否\t取值范围\t属性的含义ID\tint 主键\t否\tIDENTITY(1,1) ，从1开始自动编号\t顺序号TDate\tdate 否\t默认值：当前日期\t交易时间AccNO\tchar\t20\t外键\t否\t数字字符，参考账户表主键\t账号Expense\tmoney 是 支出Income\tmoney 是 收入OppAccNO\tchar\t20\t外键\t是\t数字字符\t对方账号Place\tnvarchar\t30 是 交易地点Abstract\tnvarchar\t20 是\t转账、消费、工资、ATM取款等\t摘要"},{"title":"test","path":"/2024/10/29/test3/","content":"USE teachingGOINSERT into scvalues(‘201501001’,’X003’,NULL),(‘201502005’,’X003’,NULL),(‘201602001’,’C001’,98),(‘201602001’,’C004’,81),(‘201602001’,’X003’,85),(‘201603005’,’C001’,78),(‘201603005’,’C004’,97),(‘201701003’,’C001’,72),(‘201701003’,’E002’,73),(‘201703001’,’C001’,85),(‘201704001’,’E002’,76) Create table teacher(tno int primary key, tname nvarchar(6), prof_title nvarchar(10))gocreate table teacher_salary(tno int primary key foreign key references teacher(tno), tname nvarchar(6), salary int)go insert teacher values(1,’郑浩’,’教授’)insert teacher values(2,’王伟’,’副教授’)insert teacher values(3,’李平’,’讲师’) create table salary_level(prof_title nvarchar(10) primary key , minsalary int, maxsalary int)goinsert salary_level values(‘教授’,7000,8900)insert salary_level values(‘副教授’,5800,7200)insert salary_level values(‘讲师’,4500,5900)insert salary_level values(‘助教’,3900,4900) – 创建触发器，确保教师工资只能涨不能降create trigger trg_salary_increase_onlyon teacher_salaryafter updateasbegin if exists ( select 1 from inserted i join deleted d on i.tno &#x3D; d.tno where i.salary &lt; d.salary ) begin rollback transaction; print ‘工资不能降低，请输入正确的工资变动。’; endend;go – 插入初始工资数据insert into teacher_salary values (1, ‘郑浩’, 7500);insert into teacher_salary values (2, ‘王伟’, 6000);insert into teacher_salary values (3, ‘李平’, 4800);go – 尝试提高工资（会成功）update teacher_salaryset salary &#x3D; 8000where tno &#x3D; 1;go – 尝试降低工资（会触发触发器并回滚）update teacher_salaryset salary &#x3D; 7000where tno &#x3D; 1;go 1– 创建触发器，确保教师工资只能涨不能降CREATE TRIGGER salary_increase_onlyON teacher_salaryFOR UPDATEASDECLARE @tno int, @new_salary int, @old_salary int; – 获取更新前后的数据SELECT @tno &#x3D; i.tno, @new_salary &#x3D; i.salary, @old_salary &#x3D; d.salaryFROM inserted iJOIN deleted d ON i.tno &#x3D; d.tno; – 检查是否有降薪情况IF @new_salary &lt; @old_salaryBEGIN PRINT ‘教师工资不能降低。更新已被取消。’; ROLLBACK;END – 插入初始工资数据insert into teacher_salary values (1, ‘郑浩’, 7500);insert into teacher_salary values (2, ‘王伟’, 6000);insert into teacher_salary values (3, ‘李平’, 4800);go – 尝试更新工资并触发触发器– 提高工资（会成功）update teacher_salaryset salary &#x3D; 8000where tno &#x3D; 1;go – 降低工资（会触发触发器并回滚）update teacher_salaryset salary &#x3D; 7000where tno &#x3D; 1;go 2– 创建学生党费表 st_duesCREATE TABLE st_dues ( sno char(9) PRIMARY KEY FOREIGN KEY REFERENCES student(sno), sname nvarchar(8) NOT NULL, dues money NOT NULL); – 创建触发器，确保只能在每年的6月和12月录入党费CREATE TRIGGER trg_check_dues_monthON st_duesAFTER INSERT, UPDATEASBEGIN DECLARE @currentMonth INT; SELECT @currentMonth &#x3D; MONTH(GETDATE()); IF @currentMonth NOT IN (6, 12) BEGIN ROLLBACK TRANSACTION; RAISERROR (&#39;党费只能在每年的6月或12月交纳&#39;, 16, 1); END END; – 示例插入数据（触发触发器）INSERT INTO st_dues (sno, sname, dues)VALUES (‘123456789’, ‘张三’, 100.00); 3– 删除原有的触发器，如果存在IF EXISTS (SELECT * FROM sys.triggers WHERE name &#x3D; ‘Transactions’)DROP TRIGGER Transactions;GO – 创建新的触发器CREATE TRIGGER TransactionsON TrecordFOR INSERTASBEGIN DECLARE @AccNO CHAR(20); DECLARE @Expense MONEY; DECLARE @Income MONEY; DECLARE @CardType NCHAR(3); DECLARE @NewBalance MONEY; -- 获取插入记录的账号、支出、收入和卡种类 SELECT @AccNO = AccNO, @Expense = Expense, @Income = Income FROM inserted; -- 获取卡种类 SELECT @CardType = CardType, @NewBalance = Balance FROM account WHERE AccNO = @AccNO; -- 检查并更新账户余额 IF @Expense IS NOT NULL BEGIN SET @NewBalance = @NewBalance - @Expense; -- 如果卡类型是借记卡且余额不足，则抛出错误 IF @CardType = N&#39;借记卡&#39; AND @NewBalance &lt; 0 BEGIN RAISERROR (&#39;余额不足，交易失败。&#39;, 16, 1); ROLLBACK TRANSACTION; END ELSE BEGIN UPDATE account SET Balance = @NewBalance WHERE AccNO = @AccNO; END END ELSE BEGIN SET @NewBalance = @NewBalance + @Income; UPDATE account SET Balance = @NewBalance WHERE AccNO = @AccNO; END END;GO – 向交易记录表插入一条带有支出的记录，触发触发器INSERT INTO Trecord (TDate, AccNO, Expense, Income, OppAccNO, Place, Abstract)VALUES (GETDATE(), ‘12345678901234567890’, 500.00, NULL, ‘09876543210987654321’, ‘Supermarket’, ‘消费’); – 向交易记录表插入一条带有收入的记录，触发触发器INSERT INTO Trecord (TDate, AccNO, Expense, Income, OppAccNO, Place, Abstract)VALUES (GETDATE(), ‘12345678901234567890’, NULL, 200.00, ‘09876543210987654321’, ‘Office’, ‘工资’);"},{"title":"传奇ChatGpt驯兽手册","path":"/2024/10/22/test2/","content":"密码学上课助手 Profile现在是大学密码学的课程，请你作为一个经验丰富、技术高深的密码学高级教授，为我讲解一些课题或者疑问。讲解时需要全面完整，思路清晰，可以适当多思考一会，提升内容质量。若是解答小疑问，请简明扼要，尽量简洁高效、快速地回复，避免不必要的拓展，节省时间。在整个聊天中，作出严谨的回答，承认知识盲区（如果有的话）；要体现高级教授的知识特色和教学技巧以便开拓思维、促进理解。接下来我将给出问题，准备好了请说“就绪” 操作系统上课助手 Profile我是一个大三的信息安全学生，正在修读操作系统课程，希望你作为一个知识广博，专业性很强的操作系统老师，为我解答各种疑惑。要求节约时间，阐述简洁，突出实用性。尽量直接且简洁地回答我的问题，避免不必要的拓展。 海选备战助手 Profile背景：我将要参加互联网企业校招的海选，为了让企业招聘人员能看中我，我们需要先准备一下。 前提：我是计算机的学生，具体专业是信息安全，在校期间并没有获得一下能证明自己能力的奖项和证书，因此不能靠履历来获得青睐，只有在校招中通过和招聘官的交流，充分表现出自己的能力，才能获得一个好的结果。 你的身份：我需要你作为一个了解当下形势、富有经验、技术过硬、机灵、随机应变，懂应聘技巧的学长，了解当下的计算机行业的企业招聘实际情况（如果你并不了解，请现在上网查询了解，而不要不懂装懂。如果查询后仍然有不了解的内容，请大方承认它），同时熟悉计算机各方面技术在求职中需要怎样表现（范围包括但不限于：数据处理分析与可视化、数据库运维 、C语言编程，Python编程，熟悉 linux系统， 熟悉网络攻防，网络设备管理，密码学算法编程）。 最终目的是：指导我在应聘中给出能让招聘官青睐的表现。 引导：当我向你提出相关疑问时，给出符合你身份的，最有效贴切的回答；当且仅当我给出 LIKE ”面试官问%学科领域“ 问题时，模拟海选场景，给出如数家珍般的理解与回答。如果我需要补充初始profile，我会以’##Profile’开头补充给你。准备好了说”就绪“。"},{"title":"第一次写一下博客","path":"/2024/10/22/test1/","content":"测试一下各个模块的摆放位置 第一步测试一下标题#标题##标题###标题 标题 --- 第二步试一下段落I really like using Markdown. I think I'll use it to format all of my documents from now on. 第三步试一下换行First line with two spaces after.And the next line. First line with the HTML tag after.And the next line. 第四步试一下强调Loveisbold Italicized text is the cat’s meow. This text is really important. Markdown 引用语法要创建块引用，请在段落前添加一个 &gt; 符号。 Dorothy followed her through many of the beautiful rooms in her castle.渲染效果如下所示： Dorothy followed her through many of the beautiful rooms in her castle. 多个段落的块引用块引用可以包含多个段落。为段落之间的空白行添加一个 &gt; 符号。 Dorothy followed her through many of the beautiful rooms in her castle. The Witch bade her clean the pots and kettles and sweep the floor and keep the fire fed with wood.渲染效果如下： Dorothy followed her through many of the beautiful rooms in her castle. The Witch bade her clean the pots and kettles and sweep the floor and keep the fire fed with wood. 嵌套块引用块引用可以嵌套。在要嵌套的段落前添加一个 &gt;&gt; 符号。 Dorothy followed her through many of the beautiful rooms in her castle. The Witch bade her clean the pots and kettles and sweep the floor and keep the fire fed with wood.渲染效果如下： Dorothy followed her through many of the beautiful rooms in her castle. The Witch bade her clean the pots and kettles and sweep the floor and keep the fire fed with wood. 带有其它元素的块引用块引用可以包含其他 Markdown 格式的元素。并非所有元素都可以使用，你需要进行实验以查看哪些元素有效。 The quarterly results look great! Revenue was off the chart. Profits were higher than ever. Everything is going according to plan.渲染效果如下： The quarterly results look great!Revenue was off the chart.Profits were higher than ever.Everything is going according to plan. 有序列表要创建有序列表，请在每个列表项前添加数字并紧跟一个英文句点。数字不必按数学顺序排列，但是列表应当以数字 1 起始。 First item Second item Third item Fourth item 无序列表要创建无序列表，请在每个列表项前面添加破折号 (-)、星号 (*) 或加号 (+) 。缩进一个或多个列表项可创建嵌套列表。 First item Second item Third item Indented item Indented item Fourth item Markdown 代码语法要将单词或短语表示为代码，请将其包裹在反引号 (&#96;) 中。 At the command prompt, type nano. Markdown 分隔线语法要创建分隔线，请在单独一行上使用三个或多个星号 (***)、破折号 (—) 或下划线 (___) ，并且不能包含其他内容。 Try to put a blank line before… …and after a horizontal rule. Markdown 链接语法链接文本放在中括号内，链接地址放在后面的括号中，链接title可选。 超链接Markdown语法代码：[超链接显示名](超链接地址 &quot;超链接title&quot;) 对应的HTML代码：&lt;a href=&quot;超链接地址&quot; title=&quot;超链接title&quot;&gt;超链接显示名&lt;/a&gt; 这是一个链接 Markdown语法。 Markdown 图片语法要添加图像，请使用感叹号 (!), 然后在方括号增加替代文本，图片链接放在圆括号里，括号里的链接后可以增加一个可选的图片标题文本。 Markdown 表格要添加表，请使用三个或多个连字符（—）创建每列的标题，并使用管道（|）分隔每列。您可以选择在表的任一端添加管道。 Syntax Description Header Title Paragraph Text 对齐您可以通过在标题行中的连字符的左侧，右侧或两侧添加冒号（:），将列中的文本对齐到左侧，右侧或中心。 Syntax Description Test Text Header Title Here’s this Paragraph Text And more markdown 删除线您可以通过在单词中心放置一条水平线来删除单词。结果看起来像这样。此功能使您可以指示某些单词是一个错误，要从文档中删除。若要删除单词，请在单词前后使用两个波浪号~~。 世界是平坦的。 我们现在知道世界是圆的。"},{"title":"Hello World","path":"/2024/10/22/hello-world/","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment"}]